#
# file contains all the swagger schema and req and response bodies for tv-season
#

components:
  schemas:
    Season:
      type: object
      required:
        - seasonNumber
        - title
        - noOfEpisodes
        - status
      properties:
        seasonNumber:
          type: integer
          description: Season number.
          example: 1
        title:
          type: string
          description: Title of the season.
          example: 'Season 1'
        description:
          type: string
          description: Description of the season.
          example: 'The gripping debut season introducing core characters and conflicts.'
        releaseDate:
          type: string
          description: Release date (ISO format, YYYY-MM-DD).
          format: date-time
          example: '2022-02-15T00:00:00.000Z'
        noOfEpisodes:
          type: integer
          description: Number of episodes in the season.
          example: 10
        posterUrl:
          type: string
          description: Optional poster image URL.
          example: 'http://example.com/season1-poster.jpg'
        status:
          type: string
          description: Status of the season.
          enum: ['ended', 'upcoming', 'on-going']
          example: 'ended'
        youtubeVideoId:
          type: string
          description: Optional trailer YouTube embed ID.
          example: '1232133dew'
        averageRating:
          type: number
          format: float
          description: Optional average rating (0-10).
          example: 8.7
    UpdateSeason:
      type: object
      description: Schema for updating an existing season. All fields are optional.
      minProperties: 1
      properties:
        seasonNumber:
          type: integer
          description: Season number.
          example: 1
        title:
          type: string
          description: Title of the season.
          example: 'Season 1'
        description:
          type: string
          description: Description of the season.
          example: 'The gripping debut season introducing core characters and conflicts.'
        releaseDate:
          type: string
          description: Release date (ISO format, YYYY-MM-DD).
          example: '2022-02-15T00:00:00.000Z'
        noOfEpisodes:
          type: integer
          description: Number of episodes in the season.
          example: 10
        posterUrl:
          type: string
          description: Optional poster image URL.
          example: 'http://example.com/season1-poster.jpg'
        status:
          type: string
          description: Status of the season.
          enum: ['ended', 'upcoming', 'on-going']
          example: 'on-going'
        youtubeVideoId:
          type: string
          description: Optional trailer YouTube embed ID.
          example: '1232133dew'
        averageRating:
          type: number
          format: float
          description: Optional average rating (0-10).
          example: 8.7
        tvShow:
          type: string
          description: MongoDB ObjectId string reference to the TV show.
          example: '60e9ef67af7b8a0015e3b4bc'

    SeasonResponseFlat:
      allOf:
        - $ref: '#/components/schemas/Season'
      required:
        - tvShow
      properties:
        tvShow:
          type: string
          description: MongoDB ObjectId string reference to the TV show.
          example: '60e9ef67af7b8a0015e3b4bc'
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/EpisodeResponseFlat'

    SeasonResponsePopulated:
      allOf:
        - $ref: '#/components/schemas/Season'
      required:
        - tvShow
      properties:
        tvShow:
          $ref: '#/components/schemas/TvShow'

    SeasonResponseFull:
      allOf:
        - $ref: '#/components/schemas/Season'
      properties:
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/Episode'

  requestBodies:
    UpdateSeasonRequest:
      description: Update season request body, at least one field required.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSeason'

    AddSeasonRequest:
      description: Add season request body.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeasonResponseFlat'

  responses:
    GetSeasonSuccessResponse:
      description: Success response for getting a season by ID.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              requestId:
                type: string
                example: 'aa636e0e-13e8-472c-874c-3aac8ae00000'
              data:
                oneOf:
                  - $ref: '#/components/schemas/SeasonResponseFlat'
                  - allOf:
                      - $ref: '#/components/schemas/Season'
                        description: Season details only (no episodes) when fullDetails is set to false
                      - type: object
                        required:
                          - tvShow
                        properties:
                          tvShow:
                            type: string
                            description: MongoDB ObjectId string reference to the TV show.
                            example: '60e9ef67af7b8a0015e3b4bc'
                    description: Season details only when full details is set to false

    UpdateSeasonSuccessResponse:
      description: Success response for updating a season.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              requestId:
                type: string
                example: 'aa636e0e-13e8-472c-874c-3aac8ae00000'
              data:
                allOf:
                  - $ref: '#/components/schemas/Season'
                  - type: object
                    required:
                      - tvShow
                    properties:
                      tvShow:
                        type: string
                        description: MongoDB ObjectId string reference to the TV show.
                        example: '60e9ef67af7b8a0015e3b4bc'

    DeleteSeasonSuccessResponse:
      description: Success response for deleting a season.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              requestId:
                type: string
                example: 'aa636e0e-13e8-472c-874c-3aac8ae00000'
              data:
              allOf:
                - $ref: '#/components/schemas/Season'
                - type: object
                  required: [tvShow, episodes]
                  properties:
                    tvShow:
                      type: string
                      description: MongoDB ObjectId string reference to the TV show.
                      example: '60e9ef67af7b8a0015e3b4bc'
                    episodes:
                      type: object
                      description: Result of deleting all episodes in the season.
                      properties:
                        deletedCount:
                          type: integer
                          example: 10
              message:
                type: string
                example: 'Season and associated episodes deleted successfully'

    AddSeasonSuccessResponse:
      description: Success response for adding a season.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              requestId:
                type: string
                example: 'aa636e0e-13e8-472c-874c-3aac8ae00000'
              data:
                $ref: '#/components/schemas/SeasonResponseFlat'
              message:
                type: string
                example: 'Season created successfully'
